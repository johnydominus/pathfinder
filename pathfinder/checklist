using ((depth-first search || breadth-first search) &&  adjacency list);

main(){
    error handling      
        usage           V
        no file         V
        empty file      
        first line      V
        some line       
        
    parse vertices amount;
    parse graph &&
    create adjacency list;
    use pathfinding algorithm;
    save right path;
    output the path;
};

adjacency_list {
    nodes {
        vertice {
            name;
            edges {
                vertice_name;
                distance;
            }
        }
        next node;
    }
}
